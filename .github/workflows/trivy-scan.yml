name: Trivy Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  trivy-scan:
    name: Trivy Vulnerability Scanner
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Exécuter Trivy en mode filesystem (analyse des dépendances)
      - name: Run Trivy vulnerability scanner in filesystem mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      # Exécuter Trivy en mode config (analyse des fichiers de configuration)
      - name: Run Trivy vulnerability scanner in config mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      # Analyser les Dockerfiles individuellement
      - name: Run Trivy vulnerability scanner on Dockerfiles
        run: |
          for dockerfile in $(find . -name "Dockerfile" -type f); do
            echo "Scanning $dockerfile"
            docker run --rm -v "$(pwd):/src" aquasec/trivy:latest config "/src/$dockerfile" --severity HIGH,CRITICAL
          done

      # Télécharger les résultats SARIF vers l'onglet Sécurité de GitHub
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
